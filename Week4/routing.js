/**
 * Routing - 페이지처럼 여러 화면을 URL에 따라 나눠서 보여주는 방법
 * 
 * 필요성
 * - React는 SPA(Single Page Application) 구조 == 기본적으로 한 html 파일에서 동작
 * - 웹 사이트는 다양한 경로(URL)을 가질 수 있어야 함
 * - 라우팅을 쓰면 URL마다 다른 컴포넌트를 렌더링 가능
 * 
 * 웹사이트 렌더링 방식
 * [SPA]
 * - 좋은 사용자 경험: 앱처럼 동작하기 때문에 UX가 좋다
 * - 서버 부하 감소: 서버는 HTML 전체가 아니라 데이터(API)만 전달하면 됨
 * - 빠른 반응성: 화면 전환이 부드럽고 빠르다(전체 페이지를 다시 불러오지 않음)
 * - 코드 재사용성: 컴포넌트 기반 구조로 UI 요소를 재사용하기 쉬움
 * - 초기 로딩 속도: 처음에 모든 JS 파일을 모두 불러오기 때문에 로딩이 오래 걸릴 수 있음
 * - SEO 문제: 검색 엔진이 JS 실행 전 페이지를 크롤링 못하면 검색에 안 잡힘
 * ** 크롤링: 웹 사이트를 자동으로 방문해서 페이지의 내용을 수집하는 행위
 * -> SPA는 한 번 로딩 후 사용자와의 모든 상호작용을 JS가 처리하는 웹 앱이며, 앱처럼 빠르고 자연스러운 UX를 제공
 * 
 * [MPA]
 * - SEO 친화적: 각 페이지가 독립된 HTML이라 검색엔진이 잘 읽음
 * - 초기 로딩이 빠름: 필요한 페이지 한 개만 불러오기 때문에 첫 진입이 빠름
 * - 구조 명확: URL별로 파일이 나뉘어서 명확하게 관리 가능
 * - 페이지 전환 느림: 이동할 때마다 전체 페이지를 다시 불러와야 해서 느림
 * - UX 끊김: 새로고침이 발생 -> UX가 떨어짐
 * - 전통적인 방식(레거시 코드, 유지보수 용이성 낮음)
 *  ** 레거시 코드: 낡았거나 유지보수가 어려운 코드를 의미
 * -> 사용자가 페이지를 이동할 때마다 새로운 HTML 문서를 요청해서 전체 페이지를 다시 로드하는 웹 앱
 *  
 *
 */